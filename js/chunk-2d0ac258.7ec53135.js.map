{"version":3,"sources":["webpack:///./src/components/redis/Streams.vue?c8ca","webpack:///src/components/redis/Streams.vue","webpack:///./src/components/redis/Streams.vue?628d","webpack:///./src/components/redis/Streams.vue"],"names":["render","_vm","this","_h","$createElement","_c","_self","staticClass","attrs","scopedSlots","_u","key","fn","_v","proxy","staticRenderFns","name","components","CodeContainer","component"],"mappings":"yHAAA,IAAIA,EAAS,WAAa,IAAIC,EAAIC,KAASC,EAAGF,EAAIG,eAAmBC,EAAGJ,EAAIK,MAAMD,IAAIF,EAAG,OAAOE,EAAG,MAAM,CAACA,EAAG,MAAM,CAACE,YAAY,WAAW,CAACF,EAAG,MAAM,CAACE,YAAY,mBAAmB,CAACF,EAAG,gBAAgB,CAACG,MAAM,CAAC,MAAQ,IAAIC,YAAYR,EAAIS,GAAG,CAAC,CAACC,IAAI,aAAaC,GAAG,WAAW,MAAO,CAACP,EAAG,MAAM,CAACJ,EAAIY,GAAG,k7DAAw9DC,OAAM,QAAW,QAC/wEC,EAAkB,G,YC+DP,GACfC,eACAC,YACAC,uBCnEgW,I,YCO5VC,EAAY,eACd,EACAnB,EACAe,GACA,EACA,KACA,KACA,MAIa,aAAAI,E","file":"js/chunk-2d0ac258.7ec53135.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('div',{staticClass:\"row m-4\"},[_c('div',{staticClass:\"col-md-8 col-12\"},[_c('CodeContainer',{attrs:{\"title\":''},scopedSlots:_vm._u([{key:\"sourceCode\",fn:function(){return [_c('pre',[_vm._v(\"// xgroup create s1 g1 0 mkstream\\ncreateStreamAddGroup(\\\"s1\\\", \\\"g1\\\", \\\"0\\\");\\n\\n// xadd s1 * k1 v1\\naddMsgToMq(\\\"s1\\\", Collections.singletonMap(\\\"k1\\\", \\\"v1\\\"));\\n\\n// xreadgroup group g1 c1 count 1 streams s1 >\\nreadMsg(\\\"s1\\\", \\\"g1\\\", \\\"c1\\\", null);\\n\\n// xreadgroup group g1 c1 count 1 streams s1 0\\nreadMsg(\\\"s1\\\", \\\"g1\\\", \\\"c1\\\", \\\"0\\\");\\n\\n// xack s1 g1 1678351006659-0\\nackAndDelete(\\\"s1\\\", \\\"g1\\\", \\\"1678351006659-0\\\");\\n\\npublic void createStreamAddGroup(String key, String group, String from) {\\n    stringRedisTemplate.opsForStream().createGroup(key, ReadOffset.from(from), group);\\n}\\n\\npublic RecordId addMsgToMq(String key, Map<String, String> map) {\\n    return stringRedisTemplate.opsForStream().add(key, map);\\n}\\n\\npublic RecordId readMsg(String key, String group, String consumer, String offset) {\\n    Consumer from = Consumer.from(group, consumer);\\n    StreamReadOptions options = StreamReadOptions.empty().count(1);\\n    ReadOffset readOffset = Strings.isEmpty(offset) ? ReadOffset.lastConsumed() : ReadOffset.from(offset);\\n    StreamOffset<String> streamOffset = StreamOffset.create(key, readOffset);\\n    List<MapRecord<String, Object, Object>> list = stringRedisTemplate.opsForStream().read(from, options, streamOffset);\\n    if (CollectionUtils.isEmpty(list)) {\\n        return null;\\n    }\\n    MapRecord<String, Object, Object> entries = list.get(0);\\n    Map<Object, Object> map = entries.getValue();\\n    System.out.println(\\\"map = \\\" + map);\\n    RecordId recordId = entries.getId();\\n    return recordId;\\n}\\n\\npublic void ackAndDelete(String key, String group, String recordId) {\\n    System.out.println(\\\"size = \\\" + stringRedisTemplate.opsForStream().size(key));\\n    Long rep = stringRedisTemplate.opsForStream().acknowledge(key, group, recordId);\\n    if (rep != null && rep == 1) {\\n        stringRedisTemplate.opsForStream().delete(key, recordId);\\n    }\\n    System.out.println(\\\"size = \\\" + stringRedisTemplate.opsForStream().size(key));\\n}\\n            \")])]},proxy:true}])})],1)])])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <div>\r\n    <div class=\"row m-4\">\r\n      <div class=\"col-md-8 col-12\">\r\n        <CodeContainer :title=\"''\">\r\n          <template v-slot:sourceCode>\r\n            <pre>\r\n// xgroup create s1 g1 0 mkstream\r\ncreateStreamAddGroup(\"s1\", \"g1\", \"0\");\r\n\r\n// xadd s1 * k1 v1\r\naddMsgToMq(\"s1\", Collections.singletonMap(\"k1\", \"v1\"));\r\n\r\n// xreadgroup group g1 c1 count 1 streams s1 >\r\nreadMsg(\"s1\", \"g1\", \"c1\", null);\r\n\r\n// xreadgroup group g1 c1 count 1 streams s1 0\r\nreadMsg(\"s1\", \"g1\", \"c1\", \"0\");\r\n\r\n// xack s1 g1 1678351006659-0\r\nackAndDelete(\"s1\", \"g1\", \"1678351006659-0\");\r\n\r\npublic void createStreamAddGroup(String key, String group, String from) {\r\n    stringRedisTemplate.opsForStream().createGroup(key, ReadOffset.from(from), group);\r\n}\r\n\r\npublic RecordId addMsgToMq(String key, Map&lt;String, String&gt; map) {\r\n    return stringRedisTemplate.opsForStream().add(key, map);\r\n}\r\n\r\npublic RecordId readMsg(String key, String group, String consumer, String offset) {\r\n    Consumer from = Consumer.from(group, consumer);\r\n    StreamReadOptions options = StreamReadOptions.empty().count(1);\r\n    ReadOffset readOffset = Strings.isEmpty(offset) ? ReadOffset.lastConsumed() : ReadOffset.from(offset);\r\n    StreamOffset&lt;String&gt; streamOffset = StreamOffset.create(key, readOffset);\r\n    List&lt;MapRecord&lt;String, Object, Object&gt;&gt; list = stringRedisTemplate.opsForStream().read(from, options, streamOffset);\r\n    if (CollectionUtils.isEmpty(list)) {\r\n        return null;\r\n    }\r\n    MapRecord&lt;String, Object, Object&gt; entries = list.get(0);\r\n    Map&lt;Object, Object&gt; map = entries.getValue();\r\n    System.out.println(\"map = \" + map);\r\n    RecordId recordId = entries.getId();\r\n    return recordId;\r\n}\r\n\r\npublic void ackAndDelete(String key, String group, String recordId) {\r\n    System.out.println(\"size = \" + stringRedisTemplate.opsForStream().size(key));\r\n    Long rep = stringRedisTemplate.opsForStream().acknowledge(key, group, recordId);\r\n    if (rep != null && rep == 1) {\r\n        stringRedisTemplate.opsForStream().delete(key, recordId);\r\n    }\r\n    System.out.println(\"size = \" + stringRedisTemplate.opsForStream().size(key));\r\n}\r\n            </pre>\r\n          </template>\r\n        </CodeContainer>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport CodeContainer from \"@/components/shared/CodeContainer.vue\";\r\nexport default {\r\n  name: \"Streams\",\r\n  components: {\r\n    CodeContainer,\r\n  },\r\n};\r\n</script>\r\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Streams.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Streams.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Streams.vue?vue&type=template&id=10296266&\"\nimport script from \"./Streams.vue?vue&type=script&lang=js&\"\nexport * from \"./Streams.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}