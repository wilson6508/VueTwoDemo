{"version":3,"sources":["webpack:///./src/components/leetCode/12_IntegerToRoman.vue?b41d","webpack:///src/components/leetCode/12_IntegerToRoman.vue","webpack:///./src/components/leetCode/12_IntegerToRoman.vue?a7f4","webpack:///./src/components/leetCode/12_IntegerToRoman.vue"],"names":["render","_vm","this","_h","$createElement","_c","_self","staticClass","attrs","scopedSlots","_u","key","fn","_v","proxy","staticRenderFns","name","components","CodeContainer","component"],"mappings":"yHAAA,IAAIA,EAAS,WAAa,IAAIC,EAAIC,KAASC,EAAGF,EAAIG,eAAmBC,EAAGJ,EAAIK,MAAMD,IAAIF,EAAG,OAAOE,EAAG,MAAM,CAACA,EAAG,MAAM,CAACE,YAAY,WAAW,CAACF,EAAG,MAAM,CAACE,YAAY,mBAAmB,CAACF,EAAG,gBAAgB,CAACG,MAAM,CAAC,MAAQ,QAAQC,YAAYR,EAAIS,GAAG,CAAC,CAACC,IAAI,aAAaC,GAAG,WAAW,MAAO,CAACP,EAAG,MAAM,CAACJ,EAAIY,GAAG,swBAAkyBC,OAAM,QAAW,GAAGT,EAAG,MAAM,CAACE,YAAY,mBAAmB,CAACF,EAAG,gBAAgB,CAACG,MAAM,CAAC,MAAQ,cAAcC,YAAYR,EAAIS,GAAG,CAAC,CAACC,IAAI,aAAaC,GAAG,WAAW,MAAO,CAACP,EAAG,MAAM,CAACJ,EAAIY,GAAG,ofAAsfC,OAAM,QAAW,QAC/wDC,EAAkB,G,YCyEP,GACfC,sBACAC,YACAC,uBC7E0W,I,YCOtWC,EAAY,eACd,EACAnB,EACAe,GACA,EACA,KACA,KACA,MAIa,aAAAI,E","file":"js/chunk-2d0aeccf.568f15f8.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('div',{staticClass:\"row m-4\"},[_c('div',{staticClass:\"col-md-8 col-12\"},[_c('CodeContainer',{attrs:{\"title\":'Java'},scopedSlots:_vm._u([{key:\"sourceCode\",fn:function(){return [_c('pre',[_vm._v(\"public String intToRoman(int num) {\\n    Map<String, Integer> tempMap = new LinkedHashMap<>();\\n    tempMap.put(\\\"M\\\", 1000);\\n    tempMap.put(\\\"CM\\\", 900);\\n    tempMap.put(\\\"D\\\", 500);\\n    tempMap.put(\\\"CD\\\", 400);\\n    tempMap.put(\\\"C\\\", 100);\\n    tempMap.put(\\\"XC\\\", 90);\\n    tempMap.put(\\\"L\\\", 50);\\n    tempMap.put(\\\"XL\\\", 40);\\n    tempMap.put(\\\"X\\\", 10);\\n    tempMap.put(\\\"IX\\\", 9);\\n    tempMap.put(\\\"V\\\", 5);\\n    tempMap.put(\\\"IV\\\", 4);\\n    tempMap.put(\\\"I\\\", 1);\\n    StringBuilder answer = new StringBuilder();\\n    for (String key : tempMap.keySet()) {\\n        int quotient = num / tempMap.get(key);\\n        num -= quotient * tempMap.get(key);\\n        answer.append(String.join(\\\"\\\", Collections.nCopies(quotient, key)));\\n    }\\n    return answer.toString();\\n}\\n        \")])]},proxy:true}])})],1),_c('div',{staticClass:\"col-md-8 col-12\"},[_c('CodeContainer',{attrs:{\"title\":'JavaScript'},scopedSlots:_vm._u([{key:\"sourceCode\",fn:function(){return [_c('pre',[_vm._v(\"var intToRoman = function(num) {\\n    const roman = {\\n        M: 1000,\\n        CM: 900,\\n        D: 500,\\n        CD: 400,\\n        C: 100,\\n        XC: 90,\\n        L: 50,\\n        XL: 40,\\n        X: 10,\\n        IX: 9,\\n        V: 5,\\n        IV: 4,\\n        I: 1\\n    };\\n    let str = \\\"\\\";\\n    for (const key of Object.keys(roman)) {\\n        const q = Math.floor(num / roman[key]);\\n        num -= q * roman[key];\\n        str += key.repeat(q);\\n    }\\n    return str;  \\n};\\n        \")])]},proxy:true}])})],1)])])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <div>\r\n    <div class=\"row m-4\">\r\n      <div class=\"col-md-8 col-12\">\r\n        <CodeContainer :title=\"'Java'\">\r\n          <template v-slot:sourceCode>\r\n            <pre>\r\npublic String intToRoman(int num) {\r\n    Map&lt;String, Integer&gt; tempMap = new LinkedHashMap&lt;&gt;();\r\n    tempMap.put(\"M\", 1000);\r\n    tempMap.put(\"CM\", 900);\r\n    tempMap.put(\"D\", 500);\r\n    tempMap.put(\"CD\", 400);\r\n    tempMap.put(\"C\", 100);\r\n    tempMap.put(\"XC\", 90);\r\n    tempMap.put(\"L\", 50);\r\n    tempMap.put(\"XL\", 40);\r\n    tempMap.put(\"X\", 10);\r\n    tempMap.put(\"IX\", 9);\r\n    tempMap.put(\"V\", 5);\r\n    tempMap.put(\"IV\", 4);\r\n    tempMap.put(\"I\", 1);\r\n    StringBuilder answer = new StringBuilder();\r\n    for (String key : tempMap.keySet()) {\r\n        int quotient = num / tempMap.get(key);\r\n        num -= quotient * tempMap.get(key);\r\n        answer.append(String.join(\"\", Collections.nCopies(quotient, key)));\r\n    }\r\n    return answer.toString();\r\n}\r\n        </pre\r\n            >\r\n          </template>\r\n        </CodeContainer>\r\n      </div>\r\n      <div class=\"col-md-8 col-12\">\r\n        <CodeContainer :title=\"'JavaScript'\">\r\n          <template v-slot:sourceCode>\r\n            <pre>\r\nvar intToRoman = function(num) {\r\n    const roman = {\r\n        M: 1000,\r\n        CM: 900,\r\n        D: 500,\r\n        CD: 400,\r\n        C: 100,\r\n        XC: 90,\r\n        L: 50,\r\n        XL: 40,\r\n        X: 10,\r\n        IX: 9,\r\n        V: 5,\r\n        IV: 4,\r\n        I: 1\r\n    };\r\n    let str = \"\";\r\n    for (const key of Object.keys(roman)) {\r\n        const q = Math.floor(num / roman[key]);\r\n        num -= q * roman[key];\r\n        str += key.repeat(q);\r\n    }\r\n    return str;  \r\n};\r\n        </pre\r\n            >\r\n          </template>\r\n        </CodeContainer>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport CodeContainer from \"@/components/shared/CodeContainer.vue\";\r\nexport default {\r\n  name: \"IntegerToRoman\",\r\n  components: {\r\n    CodeContainer,\r\n  },\r\n};\r\n</script>\r\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./12_IntegerToRoman.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./12_IntegerToRoman.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./12_IntegerToRoman.vue?vue&type=template&id=0d23a734&\"\nimport script from \"./12_IntegerToRoman.vue?vue&type=script&lang=js&\"\nexport * from \"./12_IntegerToRoman.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}