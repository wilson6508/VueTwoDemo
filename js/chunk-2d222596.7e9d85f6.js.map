{"version":3,"sources":["webpack:///./src/components/java/Reflection.vue?7cf7","webpack:///src/components/java/Reflection.vue","webpack:///./src/components/java/Reflection.vue?41bf","webpack:///./src/components/java/Reflection.vue"],"names":["render","_vm","this","_h","$createElement","_c","_self","staticClass","attrs","scopedSlots","_u","key","fn","_v","proxy","staticRenderFns","name","components","CodeContainer","component"],"mappings":"uHAAA,IAAIA,EAAS,WAAa,IAAIC,EAAIC,KAASC,EAAGF,EAAIG,eAAmBC,EAAGJ,EAAIK,MAAMD,IAAIF,EAAG,OAAOE,EAAG,MAAM,CAACA,EAAG,MAAM,CAACE,YAAY,WAAW,CAACF,EAAG,MAAM,CAACE,YAAY,mBAAmB,CAACF,EAAG,gBAAgB,CAACG,MAAM,CAAC,MAAQ,UAAUC,YAAYR,EAAIS,GAAG,CAAC,CAACC,IAAI,aAAaC,GAAG,WAAW,MAAO,CAACP,EAAG,MAAM,CAACJ,EAAIY,GAAG,o3BAA43BC,OAAM,QAAW,GAAGT,EAAG,MAAM,CAACE,YAAY,mBAAmB,CAACF,EAAG,gBAAgB,CAACG,MAAM,CAAC,MAAQ,WAAWC,YAAYR,EAAIS,GAAG,CAAC,CAACC,IAAI,aAAaC,GAAG,WAAW,MAAO,CAACP,EAAG,MAAM,CAACJ,EAAIY,GAAG,kyCAAozCC,OAAM,QAAW,QACtqFC,EAAkB,G,YC4GP,GACfC,kBACAC,YACAC,uBChHmW,I,YCO/VC,EAAY,eACd,EACAnB,EACAe,GACA,EACA,KACA,KACA,MAIa,aAAAI,E","file":"js/chunk-2d222596.7e9d85f6.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('div',{staticClass:\"row m-4\"},[_c('div',{staticClass:\"col-md-8 col-12\"},[_c('CodeContainer',{attrs:{\"title\":'Person'},scopedSlots:_vm._u([{key:\"sourceCode\",fn:function(){return [_c('pre',[_vm._v(\"public class Person {\\n\\n    private final String name;\\n    private int age;\\n\\n    public Person(String name, int age) {\\n        this.name = name;\\n        this.age = age;\\n    }\\n\\n    public String getName() {\\n        return name;\\n    }\\n\\n    public int getAge() {\\n        return age;\\n    }\\n\\n    public void setAge(int age) {\\n        this.age = age;\\n    }\\n\\n    public void publicMethodWithParam(String str) {\\n        System.out.println(str);\\n    }\\n\\n    public void publicMethod() {\\n        System.out.println(\\\"publicMethod\\\");\\n    }\\n\\n    public static void publicStaticMethod() {\\n        System.out.println(\\\"publicStaticMethod\\\");\\n    }\\n\\n    private void privateMethod() {\\n        System.out.println(\\\"privateMethod\\\");\\n    }\\n\\n    private static void privateStaticMethod() {\\n        System.out.println(\\\"privateStaticMethod\\\");\\n    }\\n\\n}\\n        \")])]},proxy:true}])})],1),_c('div',{staticClass:\"col-md-8 col-12\"},[_c('CodeContainer',{attrs:{\"title\":'Example'},scopedSlots:_vm._u([{key:\"sourceCode\",fn:function(){return [_c('pre',[_vm._v(\"import java.lang.reflect.Field;\\nimport java.lang.reflect.Method;\\n\\npublic class Example {\\n    public static void main(String[] args) throws Exception {\\n\\n        Person person = new Person(\\\"Tom\\\", 18);\\n        Field[] fields = person.getClass().getDeclaredFields();\\n        for (Field field : fields) {\\n            if (field.getName().equals(\\\"name\\\")) {\\n                field.setAccessible(true);\\n                field.set(person, \\\"Amy\\\");\\n            }\\n        }\\n\\n        Method[] methods = person.getClass().getDeclaredMethods();\\n        for (Method method : methods) {\\n            if (method.getName().equals(\\\"publicMethodWithParam\\\")) {\\n                method.invoke(person, \\\"ABC\\\");\\n            }\\n            if (method.getName().equals(\\\"publicMethod\\\")) {\\n                method.invoke(person);\\n            }\\n            if (method.getName().equals(\\\"publicStaticMethod\\\")) {\\n                method.invoke(null);\\n            }\\n            if (method.getName().equals(\\\"privateMethod\\\")) {\\n                method.setAccessible(true);\\n                method.invoke(person);\\n            }\\n            if (method.getName().equals(\\\"privateStaticMethod\\\")) {\\n                method.setAccessible(true);\\n                method.invoke(null);\\n            }\\n        }\\n\\n    }\\n}\\n        \")])]},proxy:true}])})],1)])])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <div>\r\n    <div class=\"row m-4\">\r\n      <div class=\"col-md-8 col-12\">\r\n        <CodeContainer :title=\"'Person'\">\r\n          <template v-slot:sourceCode>\r\n            <pre>\r\npublic class Person {\r\n\r\n    private final String name;\r\n    private int age;\r\n\r\n    public Person(String name, int age) {\r\n        this.name = name;\r\n        this.age = age;\r\n    }\r\n\r\n    public String getName() {\r\n        return name;\r\n    }\r\n\r\n    public int getAge() {\r\n        return age;\r\n    }\r\n\r\n    public void setAge(int age) {\r\n        this.age = age;\r\n    }\r\n\r\n    public void publicMethodWithParam(String str) {\r\n        System.out.println(str);\r\n    }\r\n\r\n    public void publicMethod() {\r\n        System.out.println(\"publicMethod\");\r\n    }\r\n\r\n    public static void publicStaticMethod() {\r\n        System.out.println(\"publicStaticMethod\");\r\n    }\r\n\r\n    private void privateMethod() {\r\n        System.out.println(\"privateMethod\");\r\n    }\r\n\r\n    private static void privateStaticMethod() {\r\n        System.out.println(\"privateStaticMethod\");\r\n    }\r\n\r\n}\r\n        </pre\r\n        >\r\n          </template>\r\n        </CodeContainer>\r\n      </div>\r\n      <div class=\"col-md-8 col-12\">\r\n        <CodeContainer :title=\"'Example'\">\r\n          <template v-slot:sourceCode>\r\n            <pre>\r\nimport java.lang.reflect.Field;\r\nimport java.lang.reflect.Method;\r\n\r\npublic class Example {\r\n    public static void main(String[] args) throws Exception {\r\n\r\n        Person person = new Person(\"Tom\", 18);\r\n        Field[] fields = person.getClass().getDeclaredFields();\r\n        for (Field field : fields) {\r\n            if (field.getName().equals(\"name\")) {\r\n                field.setAccessible(true);\r\n                field.set(person, \"Amy\");\r\n            }\r\n        }\r\n\r\n        Method[] methods = person.getClass().getDeclaredMethods();\r\n        for (Method method : methods) {\r\n            if (method.getName().equals(\"publicMethodWithParam\")) {\r\n                method.invoke(person, \"ABC\");\r\n            }\r\n            if (method.getName().equals(\"publicMethod\")) {\r\n                method.invoke(person);\r\n            }\r\n            if (method.getName().equals(\"publicStaticMethod\")) {\r\n                method.invoke(null);\r\n            }\r\n            if (method.getName().equals(\"privateMethod\")) {\r\n                method.setAccessible(true);\r\n                method.invoke(person);\r\n            }\r\n            if (method.getName().equals(\"privateStaticMethod\")) {\r\n                method.setAccessible(true);\r\n                method.invoke(null);\r\n            }\r\n        }\r\n\r\n    }\r\n}\r\n        </pre\r\n        >\r\n          </template>\r\n        </CodeContainer>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport CodeContainer from \"@/components/shared/CodeContainer.vue\";\r\n\r\nexport default {\r\n  name: \"Reflection\",\r\n  components: {\r\n    CodeContainer,\r\n  },\r\n}\r\n</script>\r\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Reflection.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Reflection.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Reflection.vue?vue&type=template&id=4b872a28&\"\nimport script from \"./Reflection.vue?vue&type=script&lang=js&\"\nexport * from \"./Reflection.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}