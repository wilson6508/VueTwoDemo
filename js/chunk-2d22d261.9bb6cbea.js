(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-2d22d261"],{f5ea:function(n,e,o){"use strict";o.r(e);var r=function(){var n=this,e=n.$createElement,o=n._self._c||e;return o("div",[o("div",{staticClass:"row m-4"},[o("div",{staticClass:"col-md-8 col-12"},[o("CodeContainer",{attrs:{title:"pom.xml",language:"html"},scopedSlots:n._u([{key:"sourceCode",fn:function(){return[o("pre",[n._v("<dependency>\n    <groupId>org.springframework.retry</groupId>\n    <artifactId>spring-retry</artifactId>\n</dependency>\n              ")])]},proxy:!0}])})],1),o("div",{staticClass:"col-md-8 col-12"},[o("CodeContainer",{attrs:{title:"build.gradle",language:"html"},scopedSlots:n._u([{key:"sourceCode",fn:function(){return[o("pre",[n._v("dependencies {\n    compile 'org.springframework.retry:spring-retry'\n}\n              ")])]},proxy:!0}])})],1),o("div",{staticClass:"col-md-8 col-12"},[o("CodeContainer",{attrs:{title:"Application"},scopedSlots:n._u([{key:"sourceCode",fn:function(){return[o("pre",[n._v("import org.springframework.boot.SpringApplication;\nimport org.springframework.boot.autoconfigure.SpringBootApplication;\nimport org.springframework.retry.annotation.EnableRetry;\n\n@EnableRetry\n@SpringBootApplication\npublic class Application {\n    public static void main(String[] args) {\n        SpringApplication.run(Application.class, args);\n    }\n}\n              ")])]},proxy:!0}])})],1),o("div",{staticClass:"col-md-8 col-12"},[o("CodeContainer",{attrs:{title:"BookService"},scopedSlots:n._u([{key:"sourceCode",fn:function(){return[o("pre",[n._v('import lombok.extern.slf4j.Slf4j;\nimport org.springframework.retry.annotation.Backoff;\nimport org.springframework.retry.annotation.Recover;\nimport org.springframework.retry.annotation.Retryable;\nimport org.springframework.stereotype.Service;\n\nimport javax.persistence.NoResultException;\nimport java.util.concurrent.atomic.AtomicInteger;\n\n@Slf4j\n@Service\npublic class BookService {\n\n    private final AtomicInteger atomicInteger = new AtomicInteger(0);\n\n    // 當捕捉到 NoResultException 時自動進行重試\n    // maxAttempts 表示最多執行次數(預設3)\n    // backoff 當捕捉到錯誤時 停多少毫秒後再重試\n    @Retryable(include = {NoResultException.class}, maxAttempts = 4, backoff = @Backoff(value = 2000))\n    public String getBook() {\n        int count = atomicInteger.incrementAndGet();\n        log.info("count = " + count);\n        if (count < 2) {\n            throw new NoResultException();\n        } else {\n            return "ABC";\n        }\n    }\n\n    // @Recover定義錯誤的處理 只能寫在同一個Class\n    // 當重試次數超過maxAttempts時 會跳到對應的Recover來處理\n    // 如果原本的功能有return的話 @Recover也要return\n    @Recover\n    public String recover(NoResultException e) {\n        return "error";\n    }\n\n}\n              ')])]},proxy:!0}])})],1),o("div",{staticClass:"col-md-8 col-12"},[o("CodeContainer",{attrs:{title:"TestApp"},scopedSlots:n._u([{key:"sourceCode",fn:function(){return[o("pre",[n._v('import com.service.BookService;\nimport lombok.extern.slf4j.Slf4j;\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.boot.CommandLineRunner;\nimport org.springframework.stereotype.Component;\n\n@Slf4j\n@Component\npublic class TestApp implements CommandLineRunner {\n    @Autowired\n    BookService bookService;\n    @Override\n    public void run(String... args) throws Exception {\n        log.info("開始測試 Service");\n        String book = bookService.getBook();\n        log.info("測試結果 " + book);\n        log.info("結束測試 Service");\n    }\n}\n\n                ')])]},proxy:!0}])})],1),o("div",{staticClass:"col-md-8 col-12"},[o("CodeContainer",{attrs:{title:"Reference"},scopedSlots:n._u([{key:"sourceCode",fn:function(){return[o("pre",[n._v("https://ithelp.ithome.com.tw/articles/10191550\n                ")])]},proxy:!0}])})],1)])])},t=[],i=o("32f4"),c={name:"Retry",components:{CodeContainer:i["a"]}},a=c,p=o("2877"),s=Object(p["a"])(a,r,t,!1,null,null,null);e["default"]=s.exports}}]);
//# sourceMappingURL=chunk-2d22d261.9bb6cbea.js.map