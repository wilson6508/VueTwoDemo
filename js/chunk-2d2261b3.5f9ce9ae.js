(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-2d2261b3"],{e6f2:function(t,n,i){"use strict";i.r(n);var e=function(){var t=this,n=t.$createElement,i=t._self._c||n;return i("div",[i("div",{staticClass:"row m-4"},[i("div",{staticClass:"col-md-8 col-12"},[i("CodeContainer",{attrs:{title:"Java"},scopedSlots:t._u([{key:"sourceCode",fn:function(){return[i("pre",[t._v('public List<String> letterCombinations(String digits) {\n\tif (digits == null || digits.isEmpty()) {\n\t\treturn new ArrayList<>();\n\t}\n\tString[] mapping = new String[]\n    {"0", "1", "abc", "def", "ghi", "jkl", "mno", "pqrs", "tuv", "wxyz"};\n\tLinkedList<String> linkedList = new LinkedList<>();\n\tlinkedList.addFirst("");\n\tfor (int i = 0; i < digits.length(); i++) {\n\t\tint idx = Integer.parseInt(String.valueOf(digits.charAt(i)));\n\t\twhile(linkedList.getFirst().length() == i) {\n\t\t\tString first = linkedList.removeFirst();\n\t\t\tfor (char c : mapping[idx].toCharArray()) {\n\t\t\t\tlinkedList.add(first + c);\n\t\t\t}\n\t\t}\n\t}\n\treturn linkedList;\n}\n        ')])]},proxy:!0}])})],1)])])},r=[],s=i("32f4"),a={name:"LetterCombinations",components:{CodeContainer:s["a"]}},d=a,o=i("2877"),l=Object(o["a"])(d,e,r,!1,null,null,null);n["default"]=l.exports}}]);
//# sourceMappingURL=chunk-2d2261b3.5f9ce9ae.js.map